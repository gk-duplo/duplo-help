name: Name for your ingress object.
ingressClassName: Select ingress controller name.
dNSPrefix: Provide the DNS prefix to expose services using Route53 domain.
visibility:  |
  Visibility can be used to manage the accessibility of services exposed by Ingress load balancer.
  *Internal Only*: Services will be accessible within tenant and to other tenants only if allowed by security rules.
  *Public*: Services will be accessible over internet.
certificateArn: Select certificate ARN to expose services over HTTPS.
ingressRules: |
  Ingress rules specifications as documented [here](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules)
  Click on the `Add Rule` button to add the rules for the kubernetes services created using DuploCloud.
  ```
ingressAnnotations: |
  List of Key Value pairs to annotate the Ingress Object. 
  Annotations are used for controlling the behavior of the services exposed by the Ingress. 
  Each ingress controller defines the set of annotations which can be used to control the behavior.
  Refer these links: 
    *AWS ALB ingress controller* [here](https://kubernetes-sigs.github.io/aws-load-balancer-controller/v2.2/guide/ingress/annotations/)
    *Azure Application Gateway Ingress* [here](https://azure.github.io/application-gateway-kubernetes-ingress/annotations/#list-of-supported-annotations)
httpPort: HTTP Listener Port. If you dont want to exposed your services over HTTP, make it blank.
httpsPort: HTTPS Listener Port. HTTPS Listener port can be specified only when SSL certificate ARN is specified.
AddIngressingressLabels: |
  Key Value pair of labels to be added to SecretProviderClass
  Sample Value Can be as bellow
  ```yaml
  key1: value1
  key2: value2
  ```
portOverride: Select port to override. This field allows to configure frontend listener to use different ports other than 80/443 for http/https.
